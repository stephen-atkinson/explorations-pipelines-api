name: Deploy

on:
  push:
    branches: main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  DOTNET_VERSION: '8.0.x' # The .NET SDK version to use
  API_PROJECT_NAME: 'Explorations.Pipelines.Api'
  PUBLISH_OUTPUT_FOLDER: 'publish-output'
  EF_MIGRATIONS_BUNDLE_NAME: 'efbundle'

jobs:
  publish:

    runs-on: ubuntu-latest

    steps:
    
      - uses: actions/checkout@v4
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup EF Tools
        run: |
          dotnet tool install --global dotnet-ef
          dotnet tool restore

      - name: Add Stephen Atkinson NuGet
        uses: stephen-atkinson/add-nuget-source@v1
        with:
          source: ${{ vars.STEPHEN_ATKINSON_NUGET_SOURCE }}
          username: ${{ secrets.STEPHEN_ATKINSON_NUGET_PAT }} 
          password: ${{ secrets.STEPHEN_ATKINSON_NUGET_PAT }} 

      - name: Build
        run: dotnet build '${{env.API_PROJECT_NAME}}/${{env.API_PROJECT_NAME}}.csproj' -c Release
          
      - name: Publish
        run: dotnet publish '${{env.API_PROJECT_NAME}}/${{env.API_PROJECT_NAME}}.csproj' -c Release -o '${{env.PUBLISH_OUTPUT_FOLDER}}' --no-build

      - name: Bundle EF Migrations
        run: |
          dotnet ef migrations bundle \
          -r linux-x64 \
          --project ${{env.API_PROJECT_NAME}} \
          --no-build
        
      - name: Upload Publish Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.API_PROJECT_NAME}}
          path: ${{env.PUBLISH_OUTPUT_FOLDER}}

      - name: Upload EF Migrations Bundle Artifact
        uses: actions/upload-artifact@v4
        with:
          name: efbundle
          path: ./efbundle

  staging:
    needs: publish
    environment: Staging
    runs-on: ubuntu-latest

    steps:
    
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          artifact-name: ${{env.API_PROJECT_NAME}}
          azure-webapp-name: ${{ vars.AZURE_WEBAPP_NAME }}
          database-connectionstring: ${{ secrets.DATABASE_CONNECTIONSTRING }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}


  production:
    needs: staging
    environment: Production
    runs-on: ubuntu-latest

    steps:

      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy
        uses: ./.github/actions/deploy
        with:
          artifact-name: ${{env.API_PROJECT_NAME}}
          azure-webapp-name: ${{ vars.AZURE_WEBAPP_NAME }}
          database-connectionstring: ${{ secrets.DATABASE_CONNECTIONSTRING }}
          azure-client-id: ${{ secrets.AZURE_CLIENT_ID }}
          azure-tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          azure-subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
